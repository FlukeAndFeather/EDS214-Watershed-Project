---
title: "draft"
format: html
editor: visual
---

Concentration calculation of Potassium, Nitrate, Magnesium, Calcium and Ammonium in four watersheds of Puerto Rico.

## Background

```{r}
# Install packages
install.packages("tidyverse")
install.packages("janitor")
```

```{r}
# Load packages
library(tidyverse)
library(janitor)

```

## Data

```{r}
# Read and clean data

PRM <- read_csv(here::here("data", "RioMameyesPuenteRoto.csv"),
                na = c(" ", "NA")) %>%
clean_names() #clean data

QB1 <- read_csv(here::here("data", "QuebradaCuenca1-Bisley.csv"),
                na = c(" ", "NA")) %>%
  clean_names() #clean data

QB2 <- read_csv(here::here("data", "QuebradaCuenca2-Bisley.csv"),
                na = c(" ", "NA")) %>%
  clean_names() #clean data

QB3 <- read_csv(here::here("data", "QuebradaCuenca3-Bisley.csv"),
                na = c(" ", "NA")) %>%
  clean_names() #clean data
```

```{r}
# Combine four data sets into one data frame

watersheds_combined <- rbind(PRM, QB1, QB2, QB3)

# Intermediate output, detail list of all datasets
saveRDS(watersheds_combined, "watersheds_combined.rds")
```

```{r}
# Create a new data frame

watersheds <- watersheds_combined %>%
  #only selecting the column that requires computation
  select(sample_id, sample_date, no3_n, k, mg, ca, nh4_n) %>%
  #add a new column  and change the sample dates into year for plotting, this is optional
  mutate(year = year(sample_date)) %>%
  #relocating the newly added column next to the sample dates
  relocate(year, .after = sample_date)

# Intermediate output, selected columns for computing moving average
saveRDS(watersheds, "watersheds.rds")
```

## Methods

```{r}
# Sourcing the moving average function from different .R script

source(here::here("R", "revised-func-watershed.R"))
```

```{r}
# Calculating moving average for nitrate

watersheds$no3_n_ma <- sapply(
  watersheds$sample_date,
  moving_average,
  dates = watersheds$sample_date,
  conc = watersheds$no3_n,
  win_size_wks = 9
  )
```

```{r}
# Calculating moving average for potassium

watersheds$k_ma <- sapply(
  watersheds$sample_date,
  moving_average,
  dates = watersheds$sample_date,
  conc = watersheds$k,
  win_size_wks = 9
  )
```

```{r}
# Calculating moving average for magnesium

watersheds$mg_ma <- sapply(
  watersheds$sample_date,
  moving_average,
  dates = watersheds$sample_date,
  conc = watersheds$mg,
  win_size_wks = 9
  )
```

```{r}
# Calculating moving average for calcium

watersheds$ca_ma <- sapply(
  watersheds$sample_date,
  moving_average,
  dates = watersheds$sample_date,
  conc = watersheds$ca,
  win_size_wks = 9
)
```

```{r}
# Calculating moving average for ammonium

watersheds$nh4_n_ma <- sapply(
  watersheds$sample_date,
  moving_average,
  dates = watersheds$sample_date,
  conc = watersheds$nh4_n,
  win_size_wks = 9
)
```

```{r}
#This code is working and is optional

# watershed_ma <- watersheds %>%
#   mutate(sample_date = as.Date(sample_date))
# 
# watershed_ma_final <- watershed_ma %>%
#   group_by(sample_id) %>%
#   arrange(sample_date) %>%
#   mutate(no3_n_ma63 = rollapply(data = no3_n,
#                                 width = 63,
#                                 FUN = mean,
#                                 align = "left",
#                                 fill = NA,
#                                 na.rm = TRUE)) %>%
#   ungroup()
```

```{r}
# Create a data frame for the ggplot!

watersheds_ma <- watersheds %>%
  # select columns of interest for reshaping
  select(sample_id, sample_date, year, no3_n_ma, k_ma, mg_ma, ca_ma, nh4_n_ma) %>%
  # reshape table from wide to long
  pivot_longer(cols = c("no3_n_ma", "k_ma", "mg_ma", "ca_ma", "nh4_n_ma"),
               names_to = "ion", # give column name for variable
               values_to = "moving_avg_value") %>% # give column name for values
  filter(year >= 1988, year <= 1994) # choose the year of interest for computing

# Intermediate output, data frame for ggplot
saveRDS(watersheds_ma, "watersheds_ma.rds")
```

## Results

```{r}
# Create a ggplot!

ggplot(data = watersheds_ma, aes(x = sample_date, y = moving_avg_value)) +
  geom_line(aes()) +
<<<<<<< HEAD
  facet_wrap(~ion,
             scales = "free_y",
             ncol = 1) +
  geom_vline(xintercept = as.Date("1989-09-18"),
             colour="black",
             linetype = "longdash")
=======
  facet_wrap(~ion, scales = "free_y", ncol = 1) +
  geom_vline(xintercept = 1:5, colour="gray", linetype = "longdash") +
  theme_classic()
>>>>>>> 740d38b277c638d9c3e7865c2f1279902c7ee2bb
```
